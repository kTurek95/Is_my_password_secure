class Password:
    def __init__(self, user_password):
        self.user_password = user_password

    def correct_length(self):
        if len(self.user_password) < 8:
            return 'Hasło nie spełnia wymogów'
        else:
            return 'Długość hasła jest odpowiednia'

    def at_least_one_number(self):
        numbers = '0123456789'
        for letter in self.user_password:
            if letter in numbers:
                return 'Hasło zawiera przynajmniej 1 cyfrę'
        return 'W haśle brakuje cyfry'

    def at_least_one_special_character(self):
        spec_char = '!@#$%^&*<>?|()'
        for letter in self.user_password:
            if letter in spec_char:
                return 'Hasło zawiera przynajmniej 1 znak specjalny'
        return 'W haśle brakuje znaku specjalnego'

    def upper_and_lower_characters(self):
        is_lower = any(letter.islower() for letter in self.user_password)
        is_upper = any(letter.isupper() for letter in self.user_password)

        if is_lower and is_upper:
            return 'Hasło spełnia wymogi dużej i małej litery'
        elif is_lower and not is_upper:
            return 'Brakuje wielkiej litery'
        elif is_upper and not is_lower:
            return 'Brakuje małej litery'
        else:
            return 'Hasło nie spełnia wymogów dużej i małej litery'



from hashlib import sha1
from requests import get
from password import Password


class Api(Password):
    def __init__(self, user_password):
        super().__init__(user_password)
        self.sha_password = self.convert_password_into_sha()

    def convert_password_into_sha(self):
        sha_password = sha1(self.user_password.encode('utf-8'))
        return sha_password.hexdigest()

    def connect_with_api(self):
        response = get('https://api.pwnedpasswords.com/range/' + self.sha_password[:5].upper())
        api_answer = response.text
        return api_answer

    def check_if_password_in_api(self):
        response = self.connect_with_api()
        if self.convert_password_into_sha()[5:].upper() in response:
            return 'Zmień swoje hasło !'

        return 'Twoje hasło wygląda na bezpieczne'
